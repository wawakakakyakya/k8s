apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    home.apps.service: mysql
  name: mysql
  namespace: home-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      home.apps.service: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        home.apps.service: mysql
    spec:
      hostname: mysql
      restartPolicy: Always
      containers:
        - name: mysql
          image: localhost:30080/mysql
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: mysql-conf
              mountPath: /etc/mysql
            - name: initdb-d
              mountPath: /docker-entrypoint-initdb.d
            - name: mysql-files
              mountPath: /var/lib/mysql-files
          env:
            - name: MYSQL_ROOT_PASSWORD # env name of pod
              valueFrom:
                secretKeyRef:
                  name: dotenv # metadata.name of secret
                  key: MYSQL_ROOT_PASSWORD # key of .env
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dotenv
                  key: MYSQL_ALLOW_EMPTY_PASSWORD
      volumes:
        - name: mysql-conf
          configMap:
            name: mysql-conf # マウントしたいConfigMapの名前
            items: # ファイルとして作成するConfigMapのキーの配列, 記載した特定のものだけをconfigmapから持ってくる
              - key: my.cnf
                path: my.cnf
                mode: 0644
        - name: initdb-d
          secret:
            secretName: initdb.sql # マウントしたいConfigMapの名前
            items: # ファイルとして作成するConfigMapのキーの配列, 記載した特定のものだけをconfigmapから持ってくる
              - key: initdb.sql
                path: initdb.sql
                mode: 0644
        - name: mysql-files
          hostPath:
            # directory location on host
            path: /root/mysql_data
            # this field is optional
            type: Directory
status: {}
